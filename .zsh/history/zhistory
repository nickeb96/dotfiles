./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
typeset -a array=(a b c)
echo $array
for item in $array; do echo $item; done
typeset -p
typeset -p array
echo $array
echo ${array[2]}
echo ${+array[2]}
echo ${#array[2]}
echo ${#array}
echo ${#array[4]}
echo ${array[4]}
echo ${+array[4]}
echo ${+array[3]}
echo ((${+array[4]}))
echo ((${+array[2]}))
if ((${+array[2]})); then echo hi; done\
\
fi
if ((${+array[2]})); then echo hi; fi
if ((${+array[4]})); then echo hi; fi
if ((${+array[4]})); then echo hi; \
if ((${+array[4]})); then echo hi; fi\
fi
ls
vim program
mv program types
ls
touch program
ls
chmod +x program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
bash pro
bash program
vim program
bash program
vim program
./program
vim program
./program
vim program
./program
vim program
./program
vim program
mv program posixstrsplit
touch program
chmod +x program
vim program
vim posixstrsplit
vim program
./program
vim program
cd ..
cd -
cd join
ls
vim program
man sort
sort f1
vim f1
cat f1
sort f1
vim program
./program
vim f2
cat f1 > f2
vim f1
vim f2
./program
vim program
vim f1
./program
sort f1
sort f2
man sort
sort -b f1
vim program
./program
vim program
./program
vim program
./program
cat f1
sort f1
sort -b f1
vim program
sort -b f1
./program
vim program
./program
vim program
set test='  thing '
echo $thing
echo $term
echo $test
declare test='   thing  '
echo $test
test=$test
echo '$test'
echo "$test"
exit
brew outdated
exit
cd .zsh
ls -l caches
cd scripts
cd ..
vim zshrc
exit
view .zsh/scripts/update.zsh
ls
exit
cd workspace
ls
cd deleteme
ls
mkdir dyna
cd dyna
ls
cd ..
rmdir dyna
ls
mkdir dynarray
cd dynarray
touch dynarray.h
vim dynarray.h
touch main.c
vim main.c
cc main.c -o program
vim main.c
cc main.c -o program
vim dynarray.h
cc main.c -o program
vim main.c
vim dynarray.h
vim main.c
cc main.c -o program
./program
vim main.c
vim dynarray.h
vim main.c
vim dynarray.h
vim main.c
cc main.c -o program
./program
./program > out
view main.c
ls
rm out
cd
exit
ls
man ims
cd .local
ls
cd bin
ls
vim imsg
cd
cd ls
ls
cd .vim
cd
exit
zsh .zsh/scripts/update.zsh
ls
clear
cd workspace
ls
cd deleteme
ls
mkdir cthing
cd cthing
ls
cd ..
ls
cd dynarray
ls
cp dynarray.h ../cthing
cd ../cthing
ls
vim dynarray.h
touch main.c
vim main.c
vim dynarray.h
vim main.c
cc main.c
ls
rm a.out
cc main.c -o program
./program
vim dynarray.h
vim main.c
cc main.c -o program
vim main.c
cc main.c -o program
vim main.c
cc main.c -o program
vim main.c
cc main.c -o program
./program
vim dynarray.h
vim main.c
cc main.c -o program
vim dynarray.h
vim main.c
cc main.c -o program
vim dynarray.h
cc main.c -o program
vim main.c
cc main.c -o program
vim main.c
ls
mv dynarray.h da_type.h
ls
touch da_double.h
vim da_double.h
vim main.c
cc main.c -o program
./program
vim main.c
vim da_type.h
./program
vim main.c
cc main.c -o program
./program
vim da_type.h
man vector
man cpp
man c++
man cplusplus
man std::list
brew search cpp
brew search cppman
pip3 install cppman
rehash
cppman
cppman vector
man cppman
cppman vector -P less
cppman vector -p less
cppman vector
cd
cd /
cd usr/local
ls
cd lib
ls
cd python3.5
ls
cd
cd -
cd site-packages
ls
cd cppman
ls
view main.py
view environ.py
view config.py
cppman set
cd
cd workspace
ls
mkdir table
cd table
pbpaste > file
vim file
cppman unorderd_set
cppman unordered_set
cppman funciton
cppman funcitons
cppman function
pbpaste > file
vim file
cat file | wc
cat file | wc -c
cat file | wc -m
cp file
cp file thing
vim thing
ls
mv thing program
chmod +x program
vim program
./program
vim program
./program
vim program
./program
vim program
./program 23 14
./program 4 4
./program 4 8
./program 8 4
./program 99 00
./program 99 99
./program 120 80
./program 80 25
ls
pwd
exigt
exit
cd workspace/deleteme
ls
cd dynarray
ls
cd ..
ls
cd cthing
ls
vim da_type.h
vim da_double.h
ls
vim main.c
cd
pwd
ls
cd .l
cd .local
ls
cd ..
ks
ls -a
rm .node_repl_history
rm -rf .oracle_jre_usage
ls
ls -a
cd .tor
ls
cd
pwd
echo $#
echo $@
function f {\
    echo $@\
}
f a b c
function f1 {\
    echo $0\
}
f1
cd ..
f1
whence f1
whence f
whence -v f
exit
rehash
for i in x; do echo $i; done
for i in a b c; do echo $i; done
for i in "a b c"; do echo $i; done
for i in echo "a b c"; do echo $i; done
for i in $(echo "a b c"); do echo $i; done
while true; do echo hi; done
ls
exi
exit
open http://www.redit.com/
open http://www.reddit.com/
exit
cd Desktop
touch list-of-shit-to-do.txt
vim li
vim list-of-shit-to-do.txt
function f {\
cat $1 | while read line; do\
echo $line\
done\
}
f list-of-shit-to-do.txt
exit
cd workspace
ls -a
rm .DS_Store
ls
for dir in ./*; do if test -d $dir; then ls -a $dir; fi; done
for dir in ./*; do if test -d $dir; then echo -n $dir; ls -a $dir; fi; done
for dir in ./*; do if test -d $dir; then echo -n $dir :; ls -a $dir; fi; done
ls
cd assemblylib
ls
ls -a
rm .DS_Store
ls
cd ..
ls
cd web-class
ls
ls -a
rm .DS_Store
ls -a *
rm */.DS_Store
l
ls
ls -a *
cd ..
ls
exit 
cd dotfiles
cd ..
cd Desktop
ls
vim test.html
exit
ls
brew outdated
cd .zsh
cd caches
ls
ls -l
date
cd ..
cd scripts
l
ls
vim update.zsh
pushd .
cd ..
cd caches
ls
ls -l
date
pushd
ls
dirs
vim update.zsh
cd ..
vim zshrc
exit
cd .zsh/caches
ls
rm lastupdate
ls
exit
cd GitHub
ls
cd homebrew-tap
s
ls
cd ..
cd flag
ls
vim flag
git status
git add
git add .
ls
git status
git commit -m 'Removed test line'
git status
git push
ls
git status
cd ..
flag
brew search flag
brew install flag
rehash
flag
cd homebrew-tap
ls
vim flag.rb
brew home flag
vim flag.rb
git status
git log
ls
git status
ls
mkdir Formula
ls
mv asdf.rb Formula
ls
mv *.rb Formula
ls
ls Formula
ls
git status
mv Formula/*.rb .
ls
ls Formula
ls
ls -a
ls
git mv ./*.rb Formula
ls
ls Formula
ls
git status
ls
ls Formula
ls
brew edit flag
vim Formula/flag.rb
git status
git add .
ls
git status
git commit -m 'Updated flag to 1.0.2'
git status
git push
git status
cd
cd .zsh/ca
cd .zsh/caches
ls
touch -t
touch -t 201611100530.20 lastupdate
ls -l
cd
exit
brew outdated
cd .zsh/caches
ls -l
exit
date
ls
date
exit
ls -l .zsh/caches
brew outdated
brew upgrade flag
cd GitHub/homebrew-tap
ls
cd Formula
vim flag.rb
git status
git add .
git status
git commit -m 'Fixed sha256 for flag'
git status
git push
ls
exit
rm .zsh/caches/lastupdate
exit
/Users/Nick/GitHub/flag/flag ; exit;
brew outdated
brew upgrade flag
flag
cd
cd GitHub
cd flag
ls
vim flag
git log
open flag
man hub
hub browse
cd ..
ls
cd asdf
ls
./asdf
vim asdf
cd ..
cd
ls
cd GitHub
ls
cd ..
ls
du -sh GitHub
cd Desktop
cd
cd workspace
ls
ls csv
cd
cd Desktop
ls
cd bash
ls
vim test-script-location.sh
vim script*
ls
ls -l
cd ..
ls
 ba
cd bash
ls
touch actual-script-location.sh
vim actual-script-location.sh
sh actual-script-location.sh
sh ./actual-script-location.sh
cd
cd .local
ls
cd bin
ls
view *
cd
exit
brew list
brew search 'nickeb96/tap'
brew remove flag
cd GitHub
cd resolve
ls
ls -a
view resolve
ls
cd
ls
ls -a
cd .zsh
ls
ls -a
resolve .zlogin
resolve ./.zlogin
exit
exot
exit
ls
ls -a
rm -rf .bash_sessions
ls
ls -a
ls .jssc
ls .jssc/mac_os_x
exit
chsh
ls /etc/shells
cat /etc/shells
nologin
whence nologin
chsh
ls
cd /etc
ls
cat shells
exit
hawk
vim .zsh/source/aliases.zsh
exit
hawk
cat <<<hello
cat <<<'hello'
exit
tor
exit
mount
cd /dev
ld
man ld
ls
ls -l disk1
ls -l disk0
updime
uptime
ls -l disk2
ls -l disk2s1
man mount
cd
cd /
ls
cd
ls
mkdir flashdrive
mount /dev/disk2 flashdrive
mount /dev/disk2s1 flashdrive
man mount
ls /sbin
cd /dev
ls
exit
scp pi@raspberrypi.local:/mnt/flashdrive/champback.png ~/champback.png
ls
ls -l champback.png
mv champback.png Desktop
ls
cd Desktop
ls
exit
ssh pi@raspberrypi.local
findmnt
ssh pi@raspberrypi.local
exit
vim .zsh/source/aliases.zsh
eatmydata
exit
pi
exit
man chroot
man dd
exit
cd /dev
ls
mount disk2s1 ~/flashdrive
mount -t nfs disk2s1 ~/flashdrive
mount -t hfs disk2s1 ~/flashdrive
sudo mount -t hfs disk2s1 ~/flashdrive
sudo mount -t nfs disk2s1 ~/flashdrive
sudo mount -t msdos disk2s1 ~/flashdrive
sudo mount -t lfs disk2s1 ~/flashdrive
cd
ls
cd /dev
ls
cd
diskutil list
cd Desktop
ls
du -sh archlinux-2016.11.01-dual.iso
man dd
diskutil list
date
sleep 3; echo \\a
(sleep 3; echo \\a)&
ls
(sleep 120; echo \\a)&
diskutil list
exit
man dd
dd if=/Users/Nick/Desktop/archlinux-2016.11.01-dual.iso of=/dev/rdisk2
sudo dd if=/Users/Nick/Desktop/archlinux-2016.11.01-dual.iso of=/dev/rdisk2
sudo dd if=/Users/Nick/Desktop/archlinux-2016.11.01-dual.iso of=/dev/rdisk2 bs=1m
exit
fdisk
fdisk-l
fdisk -l
fdisk
man fdisk
pv
man pv
brew info pv
brew home pv
man pv
brew install pv
rehash
ls
ls -a
cat .plan | pv
cat .plan | pv | cat
man pv
exit
cd /Volumes/
ls
cd boot
ls
ls -l
vim cmdline.txt
exit
cd /Volumes
ls
cd AUDUBON-POS
ls
ls -a
cd .Trashes
ls
ls -a
cd ..
ls
ls -a
ls ._.Trashes
ls -al
cat ._.Trashes
cat ._ \ audubon.pdf
clear
ls
ls -al
cd
cp /Volumes/AUDUBON-POS/\ audubon.pdf Desktop
ls
cd Desktop
ls
ls -l \ audubon.pdf
mv \ audubon.pdf audubon.pdf
exit
cd /dev
ls
umount /Volumes/AUDUBON-POS
sudo umount /Volumes/AUDUBON-POS
ls
diskutil unmount /Volumes/AUDUBON-POS
ls
exit
dd if=/Users/Nick/Desktop/archlinux-2016.11.01-dual.iso bs=4M | pv | dd of=/dev/disk3
sudo dd if=/Users/Nick/Desktop/archlinux-2016.11.01-dual.iso bs=4M | pv | dd of=/dev/disk3
sudo dd if=/Users/Nick/Desktop/archlinux-2016.11.01-dual.iso bs=4M | pv | dd of=/dev/disk3 bs=4M
sudo dd if=/Users/Nick/Desktop/archlinux-2016.11.01-dual.iso bs=4m | pv | dd of=/dev/disk3 bs=4m
sudo dd if=/Users/Nick/Desktop/archlinux-2016.11.01-dual.iso bs=4m | pv | sudo dd of=/dev/disk3 bs=4m
sudo dd if=/Users/Nick/Desktop/archlinux-2016.11.01-dual.iso bs=4m | pv | sudo dd of=/dev/rdisk3 bs=4m
exit
brew outdated
brew remove flag
brew upgrade
exit
cd /dev
ls
ls -l disk0
ls
lks
ls
ls fd
cd di
exit
man past
man paste
cd de
cd Desktop
ls
cd shane
cd ..
cd ShortStories
ls
paste
paste a-piece-of-string.txt
man paste
ls -l
cat eternity-is-20-seconds-long.txt the-cactus.txt
cd
ls
touch f1
touch f2
vim f1
vim f2
cat f1 f2
cat f2 f1
paste f2
paste f1
paste f1 f2
paste f2 f1
ls
rm f1
rm f2
ls
pastebin
brew search paste
brew search bin
brew search pastebin
brew info pastebinit
brew install pastebinit
rehash
man pastebinit
echo 'this is a test' | pastebinit
open http://pastebin.com/BAmVnxVA
man pastebinit
curl http://pastebin.com/BAmVnxVA 
curl http://pastebin.com/raw/BAmVnxVA
cd /usr/local/opt/pastebinit
ls
cd bin
ls
file pastebinit
view pastebinit
echo 'this is another test' | pastebinit
vim pastebinit
ls
cd ..
ls
view README
ls
cd libexec
ls
ls *
ls sha
cd ..
cd share
ls
cd man
ls
cd man1
ls
cd ...
cd ..
ls
cd bin
ls
vim pastebinit
ls
ls -l
sudo vim pastebinit
su
echo $?
ls
brew home pastebinint
brew home pastebinit
brew edit pastebinit
cd
brew prune
brew remove pastebinit
cd .local
ls
mv ~/Downloads/pastebinit-1.5.tar.gz .
ls
tar -xzf pastebinit-1.5.tar.gz
ls
cd pastebinit-1.5
ls
ls pastebin.d
ls
ls po
ls utils
vim pastebinit
brew edit pastebinit
ls
cd ..
ls
mkdir libexec
brew edit pastbini
brew edit pastebinit
ls
rm pastebinit-1.5.tar.gz
ls
mv pastebinit-1.5 ..
ls
cd ..
ls
cd pastebinit-1.5
ls
cd ../.local
ls
mkdir etc
ls man
mkdir sbin
ls
cd ..
cd pastebinit-1.5
ls
mv pastebin.d ~/.local/etc
mv pastebinit ~/.local/bin
brew edit pastebinit
mv po ~/.local/libexec
mv utils ~/.local/libexec
ls
cd ..
cd .local
ls
cd etc
ls
rm pastebin.d
ls
rm -rf pastebin.d
ls
cd ..
ls
cd bin
ls
echo custom pastebin | ./pastebinit
vim pastebinit
echo custom pastebin | ./pastebinit
vim pastebinit
echo custom pastebin | ./pastebinit
curl http://pastebin.com/raw/z5iUeJag
curl http://pastebin.com/WAFHgNe0
curl http://pastebin.com/raw/WAFHgNe0
curl http://pastebin.com/z5iUeJag
cd
open http://pastebin.com/WAFHgNe0
echo 'this is a test for the modified pastebinit' | pastebinit
curl http://pastebin.com/raw/3s7bwgn5
exit
